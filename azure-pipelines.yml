# trigger:
# - main

# pool:
#   vmImage: 'ubuntu-latest'

# variables:
#   TF_VERSION: '1.7.5'
#   AZURE_SERVICE_CONNECTION_NAME: 'ADO'
#   TF_WORKING_DIR: '$(System.DefaultWorkingDirectory)'

# stages:
# - stage: InitPlan
#   displayName: 'Terraform Init and Plan'
#   jobs:
#     - job: InitPlanJob
#       displayName: 'Terraform Init and Plan Job'
#       steps:
#         - task: TerraformInstaller@1
#           displayName: 'Install Terraform'
#           inputs:
#             terraformVersion: 'latest'
#         - task: AzureCLI@2
#           displayName: 'Terraform Init'
#           inputs:
#             azureSubscription: '$(AZURE_SERVICE_CONNECTION_NAME)'
#             scriptType: 'bash'
#             scriptLocation: 'inlineScript'
#             workingDirectory: '$(TF_WORKING_DIR)'
#             inlineScript: |
#               terraform init
#         - task: AzureCLI@2
#           displayName: 'Terraform Plan'
#           inputs:
#             azureSubscription: '$(AZURE_SERVICE_CONNECTION_NAME)'
#             scriptType: 'bash'
#             scriptLocation: 'inlineScript'
#             workingDirectory: '$(TF_WORKING_DIR)'
#             inlineScript: |
#               terraform plan

# - stage: Approval
#   displayName: 'Manual Approval'
#   dependsOn: InitPlan
#   jobs:
#     - deployment: WaitForApproval
#       displayName: 'Approval Before Apply'
#       environment: 'Approvals'
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#               - script: echo "Waiting for approval before proceeding to Terraform Apply"
#                 displayName: 'Approval Step'

# - stage: Apply
#   displayName: 'Terraform Apply'
#   dependsOn: Approval
#   jobs:
#     - job: ApplyJob
#       displayName: 'Terraform Apply Job'
#       steps:
#         - task: TerraformInstaller@1
#           displayName: 'Install Terraform'
#           inputs:
#             terraformVersion: 'latest'
#         - task: AzureCLI@2
#           displayName: 'Terraform Init'
#           inputs:
#             azureSubscription: '$(AZURE_SERVICE_CONNECTION_NAME)'
#             scriptType: 'bash'
#             scriptLocation: 'inlineScript'
#             workingDirectory: '$(TF_WORKING_DIR)'
#             inlineScript: |
#               terraform init
#         - task: AzureCLI@2
#           displayName: 'Terraform Apply'
#           inputs:
#             azureSubscription: '$(AZURE_SERVICE_CONNECTION_NAME)'
#             scriptType: 'bash'
#             scriptLocation: 'inlineScript'
#             workingDirectory: '$(TF_WORKING_DIR)'
#             inlineScript: |
#               terraform apply -auto-approve

# comments do 
trigger:
  - main
pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: GitHubSecrets
# Local variables
  - name: TF_VERSION
    value: '1.7.5' # Specify the Terraform version
  - name: AZURE_SERVICE_CONNECTION_NAME
    value: 'ADO' # Azure service connection name
  - name: TF_WORKING_DIR
    value: '$(System.DefaultWorkingDirectory)' # Working directory for Terraform

stages:
  - stage: InitPlan
    displayName: 'Terraform Init and Plan'
    jobs:
      - job: TerraformPlan
        displayName: 'Terraform Init and Plan'
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'
          # - task: Bash@3
          #   displayName: 'Configure GitHub Token for Private Module Access'
          #   inputs:
          #     targetType: 'inline'
          #     script: |
          #       git config --global url."https://$(GITHUB_TOKEN)@github.com/".insteadOf "https://github.com/"
          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: 'ssh.github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg='
              #sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDCR/V3xFP3JCnyyoPBQZC6h47jy1HKpIfR3G/6VF4Eee6hiVLEuWbfGKVh3KLNxurX38UnNcJ2W95rfeLJ6ge5VCMS4CURrwTXFPGFfkZxHoWP774dlv6OoHOjwzDSH/kIy6Bp8BA9ul+wk/dGhacw99ZHaU4UECuo3Y/++QLFKPL+c7jFcGym0h5hMrrGVVslS5sWCUbugmFnUwJHfXXYGlMYsBLRyKFUvgOyRxVLhuS0d1YXPbn7Tpj2wpYApoDz3+hN+s5Xreuf7DMN3v9DigjIRP4E0XYfdlEImsGRTstEQjXKbHtOAY1Zh53+7K5aLf+GFx9Tf34GG3ZTgcWV0Yu+Slpti/I2xyuGyZOcol6+PGXYFpRxVNTFly0fhFbS+tmHsE7OF0KqSWkpUJngCy3MY4MqRtI01sABe2q+3QWDIv+T3KVWdxJ5Cd2kGd1hUcVhGB7hI1AaXHh9xf6R4u0jqEQZo2hkfaJGTPgjU7QJSr0P8SiRxEJ4hy83KCN74jldSTwIt5hM9DrnGO8nF6wPfojXrqbR/L9F35cUvofBJ1SDZBq6uTIGpoKFWUE+H8gPSd/maQob3O3f3ShmK4gh8OM6sb/6MJ9Q7Vl/O8+rGFqs6ueL0UJRHuG+TAjRR2olUtFhF7FssA1qUb5NGLGGdxollq65QkdVb1DVPw== prasanth.k2028@gmail.com'
              sshKeySecureFile: 'privatekey'
          - task: TerraformTask@5
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'ADO'
              backendAzureRmStorageAccountName: 'saterraformstatefile001'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'
         # to import the resource
          # - task: AzureCLI@2
          #   inputs:
          #     azureSubscription: 'ADO'
          #     scriptType: 'bash'
          #     scriptLocation: 'inlineScript'
          #     inlineScript: |
          #       terraform init
          #       terraform import azurerm_linux_web_app.example /subscriptions/292ccf82-092b-41c5-8723-0bbfad3a4080/resourceGroups/Resource_Group_Terraform_01/providers/Microsoft.Web/sites/webapp-manual-01
          - task: TerraformTask@5
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'ADO'

  - stage: Approval
    displayName: 'Manual Approval'
    dependsOn: InitPlan
    jobs:
      - deployment: WaitForApproval
        displayName: 'Approval Before Apply'
        environment: 'Approvals'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: echo "Waiting for approval before proceeding to Terraform Apply"
                  displayName: 'Approval Step'

  - stage: Apply
    displayName: 'Apply Terraform Changes'
    dependsOn: Approval
    jobs:
      - job: TerraformApply
        displayName: 'Terraform Apply'
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'
          # - task: Bash@3
          #   displayName: 'Configure GitHub Token for Private Module Access'
          #   inputs:
          #     targetType: 'inline'
          #     script: |
          #       git config --global url."https://$(GITHUB_TOKEN)@github.com/".insteadOf "https://github.com/"
          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: 'ssh.github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg='
              #sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDCR/V3xFP3JCnyyoPBQZC6h47jy1HKpIfR3G/6VF4Eee6hiVLEuWbfGKVh3KLNxurX38UnNcJ2W95rfeLJ6ge5VCMS4CURrwTXFPGFfkZxHoWP774dlv6OoHOjwzDSH/kIy6Bp8BA9ul+wk/dGhacw99ZHaU4UECuo3Y/++QLFKPL+c7jFcGym0h5hMrrGVVslS5sWCUbugmFnUwJHfXXYGlMYsBLRyKFUvgOyRxVLhuS0d1YXPbn7Tpj2wpYApoDz3+hN+s5Xreuf7DMN3v9DigjIRP4E0XYfdlEImsGRTstEQjXKbHtOAY1Zh53+7K5aLf+GFx9Tf34GG3ZTgcWV0Yu+Slpti/I2xyuGyZOcol6+PGXYFpRxVNTFly0fhFbS+tmHsE7OF0KqSWkpUJngCy3MY4MqRtI01sABe2q+3QWDIv+T3KVWdxJ5Cd2kGd1hUcVhGB7hI1AaXHh9xf6R4u0jqEQZo2hkfaJGTPgjU7QJSr0P8SiRxEJ4hy83KCN74jldSTwIt5hM9DrnGO8nF6wPfojXrqbR/L9F35cUvofBJ1SDZBq6uTIGpoKFWUE+H8gPSd/maQob3O3f3ShmK4gh8OM6sb/6MJ9Q7Vl/O8+rGFqs6ueL0UJRHuG+TAjRR2olUtFhF7FssA1qUb5NGLGGdxollq65QkdVb1DVPw== prasanth.k2028@gmail.com'
              sshKeySecureFile: 'privatekey'
          - task: TerraformTask@5
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'ADO'
              backendAzureRmStorageAccountName: 'saterraformstatefile001'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTask@5
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'ADO'
          - task: TerraformTask@5
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'ADO'


